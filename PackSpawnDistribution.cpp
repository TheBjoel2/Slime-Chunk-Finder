#include <array>
#include <cstdint>
#include <functional>

class PackSpawnDistribution
{
public:
    constexpr PackSpawnDistribution():
        m_Storage{generateFullSizedArray()}{}
    
    constexpr uint64_t getValue(const std::size_t x, const std::size_t z) const
    {
        return m_Storage[41*z + x];
    }

private:
    //link: https://youtu.be/dwKGGkjdEHI
    //Huge thanks to JL2579 for doing such an amazing job
    //You should subscribe to JL btw!!!!
    //So, basically this is how many times ehhhhhh.. the mob spawning algorithm
    //will pick the block at a given ehhhhhhhh... The distribution of the......... idk just go watch the video
    static constexpr uint64_t s_TheDataIBorrowedFromJL2579[21][21] = {
        {     1,       8,      36,      120,      330,       792,      1708,      3368,       6147,      10480,      16808,      25488,       36688,       50288,       65808,       82384,       98813,      113688,       125588,       133288,       135954},
        {     8,      64,     288,      960,     2640,      6336,     13664,     26944,      49176,      83840,     134464,     203904,      293504,      402304,      526464,      659072,      790504,      909504,      1004704,      1066304,      1087632},
        {    36,     288,    1296,     4320,    11880,     28512,     61488,    121248,     221292,     377280,     605088,     917568,     1320768,     1810368,     2369088,     2965824,     3557268,     4092768,      4521168,      4798368,      4894344},
        {   120,     960,    4320,    14400,    39600,     95040,    204960,    404160,     737640,    1257600,    2016960,    3058560,     4402560,     6034560,     7896960,     9886080,    11857560,    13642560,     15070560,     15994560,     16314480},
        {   330,    2640,   11880,    39600,   108900,    261360,    563640,   1111440,    2028510,    3458400,    5546640,    8411040,    12107040,    16595040,    21716640,    27186720,    32608290,    37517040,     41444040,     43985040,     44864820},
        {   792,    6336,   28512,    95040,   261360,    628560,   1360512,   2694672,    4941000,    8463456,   13638528,   20777472,    30036672,    41332752,    54279072,    68160240,    81961272,    94487472,    104527872,    111034512,    113289840},
        {  1708,   13664,   61488,   204960,   563640,   1360512,   2963920,   5915840,   10934532,   18879616,   30667616,   47079360,    68541760,    94919840,   125354880,   158184544,   190980860,   220858560,    244877360,    260478400,    265895064},
        {  3368,   26944,  121248,   404160,  1111440,   2694672,   5915840,  11914960,   22227192,   38725856,   63467776,   98254080,   144140480,   200967760,   266983200,   338623664,   410531080,   476279280,    529286080,    563792720,    575792784},
        {  6147,   49176,  221292,   737640,  2028510,   4941000,  10934532,  22227192,   41849865,   73565136,  121607928,  189769392,   280388592,   393381072,   525433392,   669492720,   814680567,   947848392,   1055471292,   1125664632,   1150108470},
        { 10480,   83840,  377280,  1257600,  3458400,   8463456,  18879616,  38725856,   73565136,  130405696,  217298432,  341577216,   507942016,   716604896,   961718976,  1230310432,  1501933616,  1751718816,   1953996416,   2086130656,   2132196192},
        { 16808,  134464,  605088,  2016960,  5546640,  13638528,  30667616,  63467776,  121607928,  217298432,  366489664,  584046720,   880351616,  1258006336,  1708989696,  2212620992,  2727964936,  3206085120,   3596503456,   3853995776,   3945135312},
        { 25488,  203904,  917568,  3058560,  8411040,  20777472,  47079360,  98254080,  189769392,  341577216,  584046720,  945997056,  1449066240,  2102232960,  2897026560,  3803960448,  4743850320,  5624038656,   6349147200,   6832339200,   7006199328},
        { 36688,  293504, 1320768,  4402560, 12107040,  30036672,  68541760, 144140480,  280388592,  507942016,  880351616, 1449066240,  2254681600,  3318409280,  4634536320,  6164645824,  7767184400,  9279397440,  10534097600,  11377167040,  11684509344},
        { 50288,  402304, 1810368,  6034560, 16595040,  41332752,  94919840, 200967760,  393381072,  716604896, 1258006336, 2102232960,  3318409280,  4947634960,  6991840800,  9405058544, 11953791280, 14373218160,  16391795680,  17756864720,  18259503264},
        { 65808,  526464, 2369088,  7896960, 21716640,  54279072, 125354880, 266983200,  525433392,  961718976, 1708989696, 2897026560,  4634536320,  6991840800,  9985343040, 13565152224, 17372103120, 21003377760,  24046600320,  26115248160,  26883075744},
        { 82384,  659072, 2965824,  9886080, 27186720,  68160240, 158184544, 338623664,  669492720, 1230310432, 2212620992, 3803960448,  6164645824,  9405058544, 13565152224, 20774697232, 28335846416, 35669959056,  42185592608,  47324924464,  50608937952},
        { 98813,  790504, 3557268, 11857560, 32608290,  81961272, 190980860, 410531080,  814680567, 1501933616, 2727964936, 4743850320,  7767184400, 11953791280, 17372103120, 28335846416, 39791810569, 50968372536,  61077720388,  69373617800,  75207686346},
        {113688,  909504, 4092768, 13642560, 37517040,  94487472, 220858560, 476279280,  947848392, 1751718816, 3206085120, 5624038656,  9279397440, 14373218160, 21003377760, 35669959056, 50968372536, 65938931280,  79602570432,  91029187440,  99404276976},
        {125588, 1004704, 4521168, 15070560, 41444040, 104527872, 244877360, 529286080, 1055471292, 1953996416, 3596503456, 6349147200, 10534097600, 16391795680, 24046600320, 42185592608, 61077720388, 79602570432,  96617722576, 111035744960, 121899305448},
        {133288, 1066304, 4798368, 15994560, 43985040, 111034512, 260478400, 563792720, 1125664632, 2086130656, 3853995776, 6832339200, 11377167040, 17756864720, 26115248160, 47324924464, 69373617800, 91029187440, 111035744960, 128196348880, 141453699984},
        {135954, 1087632, 4894344, 16314480, 44864820, 113289840, 265895064, 575792784, 1150108470, 2132196192, 3945135312, 7006199328, 11684509344, 18259503264, 26883075744, 50608937952, 75207686346, 99404276976, 121899305448, 141453699984, 156971375172}
    };

private:
    using Storage = std::array<uint64_t, 41*41>;
    Storage m_Storage;

    constexpr Storage generateFullSizedArray()
    {
        Storage toReturn;

        std::size_t copyIndex = 0;
        for(int32_t j = -20; j <= 20; j++)
            for(int32_t i = -20; i <= 20; i++)
            {
                const std::size_t I = 20-std::abs(i);
                const std::size_t J = 20-std::abs(j);

                toReturn[copyIndex++] = s_TheDataIBorrowedFromJL2579[J][I];
            }
        
        return toReturn;
    }
};

constexpr PackSpawnDistribution g_PackSpawnDistribution;

constexpr uint64_t g_OneFullBlockPackSpawnScore = std::invoke([]()->uint64_t
{
    uint64_t toReturn = 0;

    for(int32_t j = 0; j < 41; j++)
        for(int32_t i = 0; i < 41; i++)
        {
            toReturn+=g_PackSpawnDistribution.getValue(i, j);
        }
    
    return toReturn;
});
